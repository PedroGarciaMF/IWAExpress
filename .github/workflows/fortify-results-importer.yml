################################################################################################################################################
# Fortify lets you build secure software fast with an appsec platform that automates testing throughout the DevSecOps pipeline. Fortify static,#
# dynamic, interactive, and runtime security testing is available on premises or as a service. To learn more about Fortify, start a free trial #
# or contact our sales team, visit microfocus.com/appsecurity.                                                                                 #
#                                                                                                                                              #
# Use this workflow template as a basis for integrating Fortify on Demand Static Application Security Testing(SAST) into your GitHub workflows.#
# This template demonstrates the steps to prepare the code+dependencies, initiate a scan, download results once complete and import into       #
# GitHub Security Code Scanning Alerts. Existing customers should review inputs and environment variables below to configure scanning against  #
# an existing application in your Fortify on Demand tenant. Additional information is available in the comments throughout the workflow, the   #
# documentation for the Fortify actions used, and the Fortify on Demand / ScanCentral Client product documentation. If you need additional     #
# assistance with configuration, feel free to create a help ticket in the Fortify on Demand portal.                                            #
################################################################################################################################################

name: Fortify on Demand Results Import

# TODO: Customize trigger events based on your DevSecOps processes and typical FoD SAST scan time
on:
  workflow_dispatch:
#  push:
#    branches: [ master ]
#  pull_request:
    # The branches below must be a subset of the branches above
#    branches: [ master ]
   schedule:
    - cron: '34 2 * * 5'

jobs:
  FoD-Results-Importer:
    # Use the appropriate runner for building your source code.
    # TODO: Use a Windows runner for .NET projects that use msbuild. Additional changes to RUN commands will be required to switch to Windows syntax.
    runs-on: ubuntu-latest

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v2

      # Java 8 required by ScanCentral Client and FoD Uploader(Univeral CI Tool)
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Once scan completes, pull SAST issues from Fortify on Demand and generate SARIF output.
      # TODO: Review Action inputs. For most users, these will be the same as used in the Perform SAST Scan step.
      - name: Download Results
        uses: fortify/gha-fod-generate-sarif@1.1.0
        with:
          base-url: https://emea.fortify.com
          tenant: ${{ secrets.FOD_TENANT }}
          user: ${{ secrets.FOD_USER }}
          password: ${{ secrets.FOD_PAT }}
          release-id: ${{ secrets.FOD_RELEASE_ID }}
          output: ./sarif/output.sarif

      # Check if SARIF output file has been created
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./sarif/output.sarif"

      # Import Fortify on Demand results to GitHub Security Code Scanning
      - name: Import Results
        if: steps.check_files.outputs.files_exists == 'true'
        uses: github/codeql-action/upload-sarif@v1
        with:
            sarif_file: ./sarif/output.sarif
